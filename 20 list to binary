/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *sortedListToBST(ListNode *head) {
		return func(head,NULL);
    }
    
    public:
    TreeNode* func(ListNode* head, ListNode* tail)
    {
      if(head == tail)
          return NULL;
        
        ListNode* Fast = head;
        ListNode* Slow = head;
        
        while(Fast != tail && Fast->next != tail)
        {
            Fast = Fast->next->next;
            Slow = Slow->next;
        }
        
        TreeNode* Root = new TreeNode(Slow->val);
        Root->left = func(head,Slow);
        Root->right = func(Slow->next,tail);
        
        return Root;
    }
};
